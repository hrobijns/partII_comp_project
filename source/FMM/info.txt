FILES:

- kernels.py: contains kernel functions used for 2d logarithm expansions, 
I'm 95% sure they're correct, have tested them in test_kernel.py and they seem
to converge with the analytical for high expansion order as expected 

- quadtree.py: makes the quadtree for hierarchical decomposition, holds information
in nodes about inner/outer expansions etc. and interraction sets

- fmm.py: the actual fmm algorithm doing the double pass and calculating the 
potential each particle experiences

- timing.py: explores timing (not too far off linear as hoped, but doesn't mean
much yet since the errors still aren't where they need to be!)

- error.py: calculates relative error compared to brute-force approach, but this
isn't behaving as it should (we'd expect to see relative error decrease exponentially
with increasing expansion order, but it seems to stay constant and very high)

- test_kernel.py: a test to see if the kernel functions are as they should be, which
they seem to be.

THINGS I NOTICE:
- I notice that in error.py, error is zero if tree_tresh = N (as hoped, so all bodies
are in the root node, and therefore everything goes via brute force approach so relative
error to this is zero), and increases as you increase tree_tresh, but is independant of 
expansion order.
- kernel expressions seem to be correct

Therefore issue must be something to do with the logic of how far-field interactions 
are treated... struggling to spot it though